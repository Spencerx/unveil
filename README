---------------------
Unveil.js
---------------------

Unveil is a data exploration and visualization toolkit that utilizes data-driven
software design.

Documentation, usage, and examples are under construction but already available
at http://docs.quasipartikel.at/#/unveil.

Features:
---------------------
* Generic data abstraction via Collections
* Visualization API (Pluggable visualizations)
* Scene API
  * SceneGraph implementation
  * Custom Actors (graphical objects)
  * Dynamic properties (you can assign functions instead of values)
  * Motion tweening
  * Modification matrix (applied after the initial transforms, specified via properties)
  * Commands (e.g. save cpu cycles using event-based framerate determination)
  * Multiple Display (The scene can be projected to one or more canvas elements)
  * Mouse interaction support on Display level (Zooming, Paning)

Examples
---------------------

* Stacks        [http://quasipartikel.at/unveil/examples/stacks.html]
* Random Bars   [http://quasipartikel.at/unveil/examples/random_bars.html]
* Scatterplot   [http://quasipartikel.at/unveil/examples/scatterplot.html]
* Linechart     [http://quasipartikel.at/unveil/examples/linechart.html]



Hints
---------------------

Please use a webkit-based browser (Safari/Chrome) for the moment. Interaction is not yet
working in Firefox as I'm still struggling with a different implementation of ctx.isPointInPath().
In Firefox, it doesn't transform the coordinates. https://bugzilla.mozilla.org/show_bug.cgi?id=405300
However, I'll tackle this soon, but I don't want to mess up the code too much to add
exceptional behavior. I'd like to provide a clean approach that works throughout modern
browsers. Adding a huge backward compatibility layer is not what I'm interested in.
However, Firefox 3.5+ will definitely be on the supported browser list ;)

BTW: Believe it or not, it seems like Internet Explorer 9 has the fasted implementation of HTML5 canvas. ;) Good news in either case.